// Generated by CoffeeScript 2.5.1
var TreeLayout, create_layer_node, getCurrentCanvas, ref, resizeHandler, resizeTimer, root, userAgent, vm;

root = hierarchy(tree_data);

getCurrentCanvas = function() {
  return {
    w: window.innerWidth,
    h: window.innerHeight,
    offset_y: 20
  };
};

resizeTimer = false;

resizeHandler = function() {
  if (resizeTimer !== false) {
    clearTimeout(resizeTimer);
  }
  return resizeTimer = setTimeout(function() {
    m.startComputation();
    vm.create();
    return m.endComputation();
  }, 500);
};

if (((ref = window.navigator) != null ? ref.userAgent : void 0) != null) {
  userAgent = window.navigator.userAgent;
  if (userAgent.indexOf('iPhone') >= 0 || userAgent.indexOf('iPad') >= 0 || userAgent.indexOf('android') >= 0) {
    window.addEventListener('orientationchange', resizeHandler);
  } else {
    window.addEventListener('resize', resizeHandler);
  }
}

create_layer_node = function(node, node_list, diag_list, offset_y) {
  var len, tb;
  len = node_list.length;
  if (node.data.name != null) {
    tb = textbox(node.x, node.y + offset_y, node.data.name, 'red');
  } else {
    tb = textbox(node.x, node.y + offset_y, len);
  }
  node_list.push(tb);
  if (node.children != null) {
    return node.children.map(function(child, i) {
      diag_list.push(diag_v(node.x, node.y + offset_y, child.x, child.y + offset_y));
      return create_layer_node(child, node_list, diag_list, offset_y);
    });
  }
};

vm = {
  create: function() {
    var canvas, compute_list, created, diag_list, h, node_list, off_y, w;
    canvas = getCurrentCanvas();
    w = canvas.w;
    h = canvas.h;
    off_y = canvas.offset_y;
    created = tree_layout(w, h - off_y * 2)(root);
    node_list = [];
    diag_list = [];
    create_layer_node(created, node_list, diag_list, off_y);
    compute_list = [text_svg(10, 20, 'Reingold Tilford Tree Layout', 'font-size: 1.2em;', null), ...node_list, ...diag_list];
    return frame(compute_list, w, h);
  }
};

TreeLayout = {
  controller: function(args) {
    return vm;
  },
  view: function(ctrl, args) {
    return m('div', ctrl.create());
  }
};

m.mount(document.getElementById('contents'), m.component(TreeLayout));
